name: Main Portfolio workflow

on:
  push:
    branches:
      - main
      - releases

jobs:
  #  tests:

  build_backend_and_push_to_docker_hub:
    name: Push backend Docker image to DockerHub
    runs-on: ubuntu-latest
#    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/portfolio_backend_test:latest
#      - name: Push Backend to DockerHub (prod)
#        if: github.ref == 'refs/heads/main'
#        uses: docker/build-push-action@v4
#        with:
#          context: ./backend/
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/portfolio_backend_prod:latest
#      - name: Push Backend to DockerHub (test)
#        if: github.ref == 'refs/heads/releases'
#        uses: docker/build-push-action@v4
#        with:
#          context: ./backend/
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/portfolio_backend_test:latest

  build_nginx_and_push_to_docker_hub:
    name: Push nginx Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/portfolio_nginx_test:latest

#      - name: Push Nginx to DockerHub (prod)
#        if: github.ref == 'refs/heads/main'
#        uses: docker/build-push-action@v4
#        with:
#          context: ./nginx/
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/portfolio_nginx_prod:latest
#      - name: Push Nginx to DockerHub (test)
#        if: github.ref == 'refs/heads/releases'
#        uses: docker/build-push-action@v4
#        with:
#          context: ./nginx/
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/portfolio_nginx_test:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_backend_and_push_to_docker_hub
      - build_nginx_and_push_to_docker_hub
#      - build_frontend_and_push_to_docker_hub
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Copy docker-compose.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.test.yaml"
          target: "portfolio_test"
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd portfolio_test
            sudo docker compose -f docker-compose.test.yaml pull
            sudo docker compose -f docker-compose.test.yaml down
            sudo docker compose -f docker-compose.test.yaml up -d
#            sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
#            sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
#            sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/collected_static/. /backend_static/static/