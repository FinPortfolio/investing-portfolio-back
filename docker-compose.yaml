volumes:
  pg_data:

services:

  pg:
    image: postgres:17.5
    env_file:
      - .env.deploy
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 3s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - .env.deploy
    environment:
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    depends_on:
      pg:
        condition: service_healthy

  back:
    build:
      dockerfile: ./Dockerfile
      context: ./
    environment:
      APP_CONFIG__DB__URL: postgresql+asyncpg://user:password@pg:5432/portfolio
      APP_CONFIG__DB__ECHO: 1
      APP_CONFIG__DB__ECHO_POOL: 1
    ports:
      - "9000:8000"
    depends_on:
      pg:
        condition: service_healthy
##    command:
##      - python
##      - run_main.py
    develop:
      watch:
        - action: sync+restart
          path: ./fastapi_app
          target: /app
        - action: rebuild
          path: ./poetry.lock
